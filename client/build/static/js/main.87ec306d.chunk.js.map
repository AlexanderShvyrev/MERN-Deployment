{"version":3,"sources":["components/PetForm.js","components/AllPets.js","containers/Home.js","containers/NavBar.js","components/OnePet.js","components/Update.js","App.js","serviceWorker.js","index.js"],"names":["PetForm","props","useState","name","setName","petType","setPetType","description","setDescription","skillOne","setSkillOne","skillTwo","setSkillTwo","skillThree","setSkillThree","errors","setErrors","className","onSubmit","e","preventDefault","newPet","axios","post","then","res","console","log","data","navigate","catch","err","message","type","placeholder","onChange","target","value","style","color","rows","cols","AllPets","pets","shelter","setShelter","useEffect","onClick","temp","arr","key","i","length","j","bubble","map","pet","_id","to","Home","setPets","get","NavBar","OnePet","setPet","id","adoptPet","delete","filter","removeFromDom","Update","updatedPet","put","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.87ec306d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { navigate } from '@reach/router';\n\nconst PetForm = (props) => {\n    const [name, setName] = useState('')\n    const [petType, setPetType] = useState('')\n    const [description, setDescription] = useState('')\n    const [skillOne, setSkillOne] = useState('')\n    const [skillTwo, setSkillTwo] = useState('')\n    const [skillThree, setSkillThree] = useState('')\n    const [errors, setErrors] = useState({})\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n        const newPet = { name, petType, description, skillOne, skillTwo, skillThree }\n        axios.post('http://localhost:8000/api/pets', newPet)\n            .then(res => {\n                console.log(res)\n                if (res.data.errors) {\n                    setErrors(res.data.errors)\n                }\n                else {\n                    navigate('/')\n                }\n            })\n            .catch(err => console.log(err))\n    }\n\n\n    return (\n        <div className=\"col-sm-3 \">\n            <form onSubmit={onSubmitHandler}>\n                <div className=\"form-group\">\n                    {errors.name ? <p className=\"text-danger\">{errors.name.message}</p> : ''}\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Pet Name...\"\n                        onChange={e => setName(e.target.value)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    {errors.petType ? <p className=\"text-danger\">{errors.petType.message}</p> : ''}\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Pet Type...\"\n                        onChange={e => setPetType(e.target.value)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    {errors.description ? <p style={{ color: 'red' }}>{errors.description.message}</p> : \"\"}\n                    <textarea\n                        rows=\"4\"\n                        cols=\"30\"\n                        className=\"form-control\"\n                        placeholder=\"Pet Decription...\"\n                        onChange={e => setDescription(e.target.value)}\n                    />\n                </div>\n                <p>Skills (optional)</p>\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Skill 1...\"\n                        onChange={e => setSkillOne(e.target.value)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Skill 2...\"\n                        onChange={e => setSkillTwo(e.target.value)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Skill 3...\"\n                        onChange={e => setSkillThree(e.target.value)}\n                    />\n                </div>\n                <input type=\"submit\" className=\"btn btn-warning btn-block\" value=\"Add Pet\" />\n            </form>\n        </div>\n    )\n}\n\nexport default PetForm\n","import React, { useState, useEffect } from 'react'\nimport { Link } from '@reach/router';\n\n\nfunction bubble(arr, key) {\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = 0; j < arr.length - i - 1; j++) {\n            if (arr[j][key] > arr[j + 1][key]) {\n                [arr[j], arr[j + 1]] = [arr[j + 1], arr[j]];\n            }\n        }\n    }\n}\n\nconst AllPets = (props) => {\n    const [shelter, setShelter] = useState(props.pets)\n\n    const sortByType = (e) => {\n        const temp = [...shelter];\n        bubble(temp, \"petType\");\n        setShelter(temp);\n    }\n\n    useEffect(() => {\n        setShelter(props.pets);\n    }, [props.pets]);\n\n    return (\n        <div>\n            <h1>These pets are looking for a new home</h1>\n            <button className=\"btn btn-sm btn-info\" onClick={sortByType}>Sort</button>\n            <table className=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Type</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {shelter.map((pet, _id) => {\n                        return (\n                            <tr key={pet._id}>\n                                <td>{pet.name}</td>\n                                <td>{pet.petType}</td>\n                                <td>\n                                    <Link to={`/pets/${pet._id}`}>\n                                        <button className=\"btn btn-success\">Details</button>\n                                    </Link>{' '}\n                                    <Link to={`/pets/${pet._id}/edit`}>\n                                        <button className=\"btn btn-warning\">Edit</button>\n                                    </Link>\n                                </td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default AllPets\n\n\n","import React, { useEffect, useState } from 'react'\nimport axios from 'axios';\nimport AllPets from '../components/AllPets';\n\nconst Home = () => {\n    const [pets, setPets] = useState([])\n\n    useEffect(() => {\n        axios.get('http://localhost:8000/api/pets')\n            .then(res => setPets(res.data))\n\n    }, [])\n\n\n    return (\n        <div>\n            <AllPets pets={pets} />\n        </div>\n    )\n}\n\nexport default Home\n","import React from 'react'\nimport { Link } from '@reach/router'\n\n\nconst NavBar = () => {\n    return (\n        <div>\n            <nav className=\"navbar navbar-dark bg-dark\">\n                <ul className=\"nav\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to='/' style={{ color: 'white' }}>Home</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to='/new' style={{ color: 'white' }}>Add</Link>\n                    </li>\n                </ul>\n            </nav>\n        </div>\n    )\n}\n\nexport default NavBar\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios';\nimport { navigate } from '@reach/router';\n\nconst OnePet = (props) => {\n    const [pets, setPets] = useState([])\n\n    const [pet, setPet] = useState({})\n\n    useEffect(() => {\n        axios.get(`http://localhost:8000/api/pets/${props.id}`)\n            .then(res => { setPet({ ...res.data }) })\n        // eslint-disable-next-line\n    }, [])\n    const removeFromDom = _id => {\n        setPets(pets.filter(pet => pet._id !== _id));\n    }\n    const adoptPet = (_id) => {\n        axios.delete(`http://localhost:8000/api/pets/${_id}`)\n            .then(res => {\n                console.log(res)\n                removeFromDom(_id)\n                navigate('/')\n            })\n            .catch(err => console.log(err))\n    }\n\n    return (\n\n        <div className=\"col-sm-4 mb-3\">\n\n            <div className=\"card text-white bg-secondary mb-3\">\n                <div className=\"card-header\">Details about: {pet.name}</div>\n                <div className=\"card-body\">\n                    <p className=\"card-text\"><em>Type: {pet.petType}</em></p>\n                    <p className=\"card-text\">Description: {pet.description}</p>\n                    <p className=\"card-text\">Skills:</p>\n\n                    <ul className=\"card-text\">\n                        <li>{pet.skillOne}</li>\n                        <li>{pet.skillTwo}</li>\n                        <li>{pet.skillThree}</li>\n                    </ul>\n                </div>\n                <div className=\"card-footer\">\n                    <button className=\"btn btn-info\" onClick={(e) => { adoptPet(pet._id) }}>Adopt</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default OnePet\n","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { navigate } from '@reach/router'\n\nconst Update = (props) => {\n    const { id } = props\n    const [name, setName] = useState('')\n    const [petType, setPetType] = useState('')\n    const [description, setDescription] = useState('')\n    const [skillOne, setSkillOne] = useState('')\n    const [skillTwo, setSkillTwo] = useState('')\n    const [skillThree, setSkillThree] = useState('')\n    const [errors, setErrors] = useState({})\n\n    useEffect(() => {\n        axios.get(`http://localhost:8000/api/pets/${id}`)\n            .then(res => {\n                setName(res.data.name);\n                setDescription(res.data.description);\n                setPetType(res.data.petType);\n                setSkillOne(res.data.skillOne);\n                setSkillTwo(res.data.skillTwo);\n                setSkillThree(res.data.skillThree);\n            })\n        // eslint-disable-next-line\n    }, [props])\n\n    const updatePet = (e) => {\n        e.preventDefault();\n        const updatedPet = { name, petType, description, skillOne, skillTwo, skillThree }\n        axios.put(`http://localhost:8000/api/pets/${id}`, updatedPet)\n            .then(res => {\n                console.log(res)\n                if (res.data.errors) {\n                    setErrors(res.data.errors)\n                } else {\n                    navigate(`/pets/${id}`)\n                }\n            })\n            .catch(err => console.log(err))\n    }\n\n\n    return (\n        <div className=\"col-sm-3 \">\n            <form onSubmit={updatePet}>\n                <div className=\"form-group\">\n                    {errors.name ? <p className=\"text-danger\">{errors.name.message}</p> : ''}\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    {errors.petType ? <p className=\"text-danger\">{errors.petType.message}</p> : ''}\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={petType}\n                        onChange={e => setPetType(e.target.value)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    {errors.description ? <p style={{ color: 'red' }}>{errors.description.message}</p> : \"\"}\n                    <textarea\n                        rows=\"4\"\n                        cols=\"30\"\n                        className=\"form-control\"\n                        value={description}\n                        onChange={e => setDescription(e.target.value)}\n                    />\n                </div>\n                <p>Skills (optional)</p>\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={skillOne}\n                        onChange={e => setSkillOne(e.target.value)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={skillTwo}\n                        onChange={e => setSkillTwo(e.target.value)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={skillThree}\n                        onChange={e => setSkillThree(e.target.value)}\n                    />\n                </div>\n                <input type=\"submit\" className=\"btn btn-warning btn-block\" value=\"Update\" />\n            </form>\n        </div>\n    )\n}\n\nexport default Update\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootswatch/dist/slate/bootstrap.min.css';\nimport './App.css';\nimport { Router } from '@reach/router';\nimport PetForm from './components/PetForm';\nimport Home from './containers/Home';\nimport NavBar from './containers/NavBar';\nimport OnePet from './components/OnePet';\nimport Update from './components/Update';\n\nfunction App() {\n  return (\n    <div>\n      <NavBar />\n      <Router>\n        <PetForm path='/new' />\n        <Home path='/' />\n        <OnePet path='/pets/:id' />\n        <Update path='/pets/:id/edit' />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}